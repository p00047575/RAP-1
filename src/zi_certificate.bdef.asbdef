managed implementation in class zbp_i_certificate unique;
strict ( 2 );
with draft;


define behavior for ZI_Certificate alias Certificate
persistent table zbca_certificate
draft table zbcd_certificate
lock master total etag LocalLastChangedAt
etag master LocalLastChangedAt
authorization master ( global )
{

  create;
  update;
  delete;
  association _CertificateState { internal create; with draft; }

  field ( numbering : managed, readonly ) CertUUID;
  field ( readonly : update ) Version, Product, CertificationStatus, StatusText;

  determination setInitialValues on modify { field Product; create; }
  validation checkProduct on save { field Product; create; update; }

  action ( features : instance ) newVersion result [1] $self;
  action ( features : instance ) releaseVersion result [1] $self;
  action ( features : instance ) archiveVersion result [1] $self;

  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare
  {
    validation checkProduct;
  }


  mapping for zbca_certificate corresponding
  {
    CertUUID = cert_uuid;
    Product = matnr;
    CertificationStatus = cert_status;
    CertificateCe = cert_ce;
    CertificateGs = cert_gs;
    CertificateTuev = cert_tuev;
    AttachmentCE = attachment_ce;
    MimeTypeCE = mimetype_ce;
    FilenameCE = filename_ce;
    AttachmentGS = attachment_gs;
    MimeTypeGS = mimetype_gs;
    FilenameGS = filename_gs;
    AttachmentTuev = attachment_tuev;
    MimeTypeTuev = mimetype_tuev;
    FilenameTuev = filename_tuev;
    LocalLastChangedAt = local_last_changed_at;
  }

}

define behavior for ZI_CertificateState alias CertificateState
persistent table zbca_certi_state
draft table zbcd_certi_state
lock dependent by _Certificate
etag master LocalLastChangedAt
authorization dependent by _Certificate
{

  association _Certificate { with draft; }

  delete;

  field ( numbering : managed, readonly ) StateUUID;
  field ( readonly ) CertUUID;

  mapping for zbca_certi_state corresponding
  {
    StateUUID = state_uuid;
    CertUUID = cert_uuid;
    Product = matnr;
    StatusOld = status_old;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
    LocalLastChangedAt = local_last_changed_at;
  }

}